/*****************************************************************************
*  Copyright Statement:
*  --------------------
*  This software is protected by Copyright and the information contained
*  herein is confidential. The software may not be copied and the information
*  contained herein may not be used or disclosed except with the written
*  permission of MediaTek Inc. (C) 2005
*  
*  BY OPENING THIS FILE, BUYER HEREBY UNEQUIVOCALLY ACKNOWLEDGES AND AGREES
*  THAT THE SOFTWARE/FIRMWARE AND ITS DOCUMENTATIONS ("MEDIATEK SOFTWARE")
*  RECEIVED FROM MEDIATEK AND/OR ITS REPRESENTATIVES ARE PROVIDED TO BUYER ON
*  AN "AS-IS" BASIS ONLY. MEDIATEK EXPRESSLY DISCLAIMS ANY AND ALL WARRANTIES,
*  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
*  MERCHANTABI LITY, FITNESS FOR A PARTICULAR PURPOSE OR NONINFRINGEMENT.
*  NEITHER DOES MEDIATEK PROVIDE ANY WARRANTY WHATSOEVER WITH RESPECT TO THE
*  SOFTWARE OF ANY THIRD PARTY WHICH MAY BE USED BY, INCORPORATED IN, OR
*  SUPPLIED WITH THE MEDIATEK SOFTWARE, AND BUYER AGREES TO LOOK ONLY TO SUCH
*  THIRD PARTY FOR ANY WARRANTY CLAIM RELATING THERETO. MEDIATEK SHALL ALSO
*  NOT BE RESPONSIBLE FOR ANY MEDIATEK SOFTWARE RELEASES MADE TO BUYER'S
*  SPECIFICATION OR TO CONFORM TO A PARTICULAR STANDARD OR OPEN FORUM.
* 
*  BUYER'S SOLE AND EXCLUSIVE REMEDY AND MEDIATEK'S ENTIRE AND CUMULATIVE
*  LIABILITY WITH RESPECT TO THE MEDIATEK SOFTWARE RELEASED HEREUNDER WILL BE,
*  AT MEDIATEK'S OPTION, TO REVISE OR REPLACE THE MEDIATEK SOFTWARE AT ISSUE,
*  OR REFUND ANY SOFTWARE LICENSE FEES OR SERVICE CHARGE PAID BY BUYER TO
*  MEDIATEK FOR SUCH MEDIATEK SOFTWARE AT ISSUE. 
*
*  THE TRANSACTION CONTEMPLATED HEREUNDER SHALL BE CONSTRUED IN ACCORDANCE
*  WITH THE LAWS OF THE STATE OF CALIFORNIA, USA, EXCLUDING ITS CONFLICT OF
*  LAWS PRINCIPLES.  ANY DISPUTES, CONTROVERSIES OR CLAIMS ARISING THEREOF AND
*  RELATED THERETO SHALL BE SETTLED BY ARBITRATION IN SAN FRANCISCO, CA, UNDER
*  THE RULES OF THE INTERNATIONAL CHAMBER OF COMMERCE (ICC).
*
*****************************************************************************/

/*****************************************************************************
 *
 * Filename:
 * ---------
 *   sensor.h
 *
 * Project:
 * --------
 *   DUMA
 *
 * Description:
 * ------------
 *   CMOS sensor header file
 *
 ****************************************************************************/
#ifndef _OV2680_SUNWIN__SENSOR_H
#define _OV2680_SUNWIN__SENSOR_H

#define OV2680_SUNWIN__DEBUG
#define OV2680_SUNWIN__DRIVER_TRACE
//#define OV2680_SUNWIN__TEST_PATTEM
#ifdef OV2680_SUNWIN__DEBUG
//#define SENSORDB printk
#else
//#define SENSORDB(x,...)
#endif


#define OV2680_SUNWIN__FACTORY_START_ADDR 0
#define OV2680_SUNWIN__ENGINEER_START_ADDR 10

//#define MIPI_INTERFACE
// sensor ID 0x2680
 
typedef enum OV2680_SUNWIN__group_enum
{
  OV2680_SUNWIN__PRE_GAIN = 0,
  OV2680_SUNWIN__CMMCLK_CURRENT,
  OV2680_SUNWIN__FRAME_RATE_LIMITATION,
  OV2680_SUNWIN__REGISTER_EDITOR,
  OV2680_SUNWIN__GROUP_TOTAL_NUMS
} OV2680_SUNWIN__FACTORY_GROUP_ENUM;

typedef enum OV2680_SUNWIN__register_index
{
  OV2680_SUNWIN__SENSOR_BASEGAIN = OV2680_SUNWIN__FACTORY_START_ADDR,
  OV2680_SUNWIN__PRE_GAIN_R_INDEX,
  OV2680_SUNWIN__PRE_GAIN_Gr_INDEX,
  OV2680_SUNWIN__PRE_GAIN_Gb_INDEX,
  OV2680_SUNWIN__PRE_GAIN_B_INDEX,
  OV2680_SUNWIN__FACTORY_END_ADDR
} OV2680_SUNWIN__FACTORY_REGISTER_INDEX;

typedef enum OV2680_SUNWIN__engineer_index
{
  OV2680_SUNWIN__CMMCLK_CURRENT_INDEX = OV2680_SUNWIN__ENGINEER_START_ADDR,
  OV2680_SUNWIN__ENGINEER_END
} OV2680_SUNWIN__FACTORY_ENGINEER_INDEX;

typedef struct _sensor_data_struct
{
  SENSOR_REG_STRUCT reg[OV2680_SUNWIN__ENGINEER_END];
  SENSOR_REG_STRUCT cct[OV2680_SUNWIN__FACTORY_END_ADDR];
} sensor_data_struct;


#define OV2680_SUNWIN__COLOR_FORMAT                    SENSOR_OUTPUT_FORMAT_RAW_B

#define OV2680_SUNWIN__MIN_ANALOG_GAIN  1   /* 1x */
#define OV2680_SUNWIN__MAX_ANALOG_GAIN      32 /* 32x */

 
/* FRAME RATE UNIT */
#define OV2680_SUNWIN__FPS(x)                          (10 * (x))

#define OV2680_SUNWIN__MIPI_LANE_NUM	1

#define OV2680_SUNWIN__PREVIEW_CLK   66000000
#define OV2680_SUNWIN__CAPTURE_CLK   66000000
#define OV2680_SUNWIN__VIDEO_CLK     66000000
#define OV2680_SUNWIN__ZSD_PRE_CLK   66000000

/* SENSOR PIXEL/LINE NUMBERS IN ONE PERIOD */
#define OV2680_SUNWIN__FULL_PERIOD_PIXEL_NUMS          (1700) // 0x06a4)  //  15fps
#define OV2680_SUNWIN__FULL_PERIOD_LINE_NUMS           1294 //0x050e

#define OV2680_SUNWIN__PV_PERIOD_PIXEL_NUMS            OV2680_SUNWIN__FULL_PERIOD_PIXEL_NUMS //
#define OV2680_SUNWIN__PV_PERIOD_LINE_NUMS             OV2680_SUNWIN__FULL_PERIOD_LINE_NUMS //

#define OV2680_SUNWIN__VIDEO_PERIOD_PIXEL_NUMS         OV2680_SUNWIN__FULL_PERIOD_PIXEL_NUMS  //
#define OV2680_SUNWIN__VIDEO_PERIOD_LINE_NUMS          OV2680_SUNWIN__FULL_PERIOD_LINE_NUMS  //

#define OV2680_SUNWIN__3D_FULL_PERIOD_PIXEL_NUMS       OV2680_SUNWIN__FULL_PERIOD_PIXEL_NUMS /* 15 fps */
#define OV2680_SUNWIN__3D_FULL_PERIOD_LINE_NUMS        OV2680_SUNWIN__FULL_PERIOD_LINE_NUMS
#define OV2680_SUNWIN__3D_PV_PERIOD_PIXEL_NUMS         OV2680_SUNWIN__FULL_PERIOD_PIXEL_NUMS /* 30 fps */
#define OV2680_SUNWIN__3D_PV_PERIOD_LINE_NUMS          OV2680_SUNWIN__FULL_PERIOD_LINE_NUMS
#define OV2680_SUNWIN__3D_VIDEO_PERIOD_PIXEL_NUMS      OV2680_SUNWIN__FULL_PERIOD_PIXEL_NUMS /* 30 fps */
#define OV2680_SUNWIN__3D_VIDEO_PERIOD_LINE_NUMS       OV2680_SUNWIN__FULL_PERIOD_LINE_NUMS
/* SENSOR START/END POSITION */
#define OV2680_SUNWIN__FULL_X_START                    0//10
#define OV2680_SUNWIN__FULL_Y_START                    0//10
#define OV2680_SUNWIN__IMAGE_SENSOR_FULL_WIDTH         1600
#define OV2680_SUNWIN__IMAGE_SENSOR_FULL_HEIGHT        1200

#define OV2680_SUNWIN__PV_X_START                      0 // 2
#define OV2680_SUNWIN__PV_Y_START                      0 // 2
#define OV2680_SUNWIN__IMAGE_SENSOR_PV_WIDTH           OV2680_SUNWIN__IMAGE_SENSOR_FULL_WIDTH
#define OV2680_SUNWIN__IMAGE_SENSOR_PV_HEIGHT          OV2680_SUNWIN__IMAGE_SENSOR_FULL_HEIGHT

#define OV2680_SUNWIN__VIDEO_X_START                   0 //9
#define OV2680_SUNWIN__VIDEO_Y_START                   0 //11
#define OV2680_SUNWIN__IMAGE_SENSOR_VIDEO_WIDTH        OV2680_SUNWIN__IMAGE_SENSOR_FULL_WIDTH
#define OV2680_SUNWIN__IMAGE_SENSOR_VIDEO_HEIGHT       OV2680_SUNWIN__IMAGE_SENSOR_FULL_HEIGHT

#define OV2680_SUNWIN__3D_FULL_X_START                 0
#define OV2680_SUNWIN__3D_FULL_Y_START                 0
#define OV2680_SUNWIN__IMAGE_SENSOR_3D_FULL_WIDTH      OV2680_SUNWIN__IMAGE_SENSOR_FULL_WIDTH
#define OV2680_SUNWIN__IMAGE_SENSOR_3D_FULL_HEIGHT     OV2680_SUNWIN__IMAGE_SENSOR_FULL_HEIGHT
#define OV2680_SUNWIN__3D_PV_X_START                   2
#define OV2680_SUNWIN__3D_PV_Y_START                   2
#define OV2680_SUNWIN__IMAGE_SENSOR_3D_PV_WIDTH        OV2680_SUNWIN__IMAGE_SENSOR_FULL_WIDTH
#define OV2680_SUNWIN__IMAGE_SENSOR_3D_PV_HEIGHT       OV2680_SUNWIN__IMAGE_SENSOR_FULL_HEIGHT
#define OV2680_SUNWIN__3D_VIDEO_X_START                2
#define OV2680_SUNWIN__3D_VIDEO_Y_START                2
#define OV2680_SUNWIN__IMAGE_SENSOR_3D_VIDEO_WIDTH     OV2680_SUNWIN__IMAGE_SENSOR_FULL_WIDTH
#define OV2680_SUNWIN__IMAGE_SENSOR_3D_VIDEO_HEIGHT    OV2680_SUNWIN__IMAGE_SENSOR_FULL_HEIGHT



/* SENSOR READ/WRITE ID */

#define OV2680_SUNWIN__SLAVE_WRITE_ID_1   (0x6c)
#define OV2680_SUNWIN__SLAVE_WRITE_ID_2   (0x20)
/************OTP Feature*********************/
//#define OV2680_SUNWIN__USE_OTP
//#define OV2680_SUNWIN__USE_WB_OTP

#if defined(OV2680_SUNWIN__USE_OTP)

#endif
/************OTP Feature*********************/

/* SENSOR PRIVATE STRUCT */
typedef struct OV2680_SUNWIN__sensor_STRUCT
{
  MSDK_SENSOR_CONFIG_STRUCT cfg_data;
  sensor_data_struct eng; /* engineer mode */
  MSDK_SENSOR_ENG_INFO_STRUCT eng_info;
  kal_uint8 mirror;
  kal_bool pv_mode;
  kal_bool video_mode;  
  //kal_bool NightMode;
  kal_bool is_zsd;
  kal_bool is_zsd_cap;
  kal_bool is_autofliker;
  //kal_uint16 normal_fps; /* video normal mode max fps */
  //kal_uint16 night_fps; /* video night mode max fps */  
  kal_uint16 FixedFps;
  kal_uint16 shutter;
  kal_uint16 gain;
  kal_uint32 pv_pclk;
  kal_uint32 cap_pclk;
  kal_uint32 pclk;
  kal_uint16 frame_height;
  kal_uint16 line_length;  
  kal_uint16 write_id;
  kal_uint16 read_id;
  kal_uint16 dummy_pixels;
  kal_uint16 dummy_lines;
  kal_bool enter_preview;
} OV2680_SUNWIN__sensor_struct;

//export functions
UINT32 OV2680_SUNWIN_Open(void);
UINT32 OV2680_SUNWIN_Control(MSDK_SCENARIO_ID_ENUM ScenarioId, MSDK_SENSOR_EXPOSURE_WINDOW_STRUCT *pImageWindow, MSDK_SENSOR_CONFIG_STRUCT *pSensorConfigData);
UINT32 OV2680_SUNWIN_FeatureControl(MSDK_SENSOR_FEATURE_ENUM FeatureId, UINT8 *pFeaturePara,UINT32 *pFeatureParaLen);
UINT32 OV2680_SUNWIN_GetInfo(MSDK_SCENARIO_ID_ENUM ScenarioId, MSDK_SENSOR_INFO_STRUCT *pSensorInfo, MSDK_SENSOR_CONFIG_STRUCT *pSensorConfigData);
UINT32 OV2680_SUNWIN_GetResolution(MSDK_SENSOR_RESOLUTION_INFO_STRUCT *pSensorResolution);
UINT32 OV2680_SUNWIN_Close(void);

#define Sleep(ms) mdelay(ms)

#endif 
